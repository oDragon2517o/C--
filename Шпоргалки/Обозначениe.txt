?: — тернарный оператор (условие ? выражение1 : выражение2)
, — оператор запятая (для последовательного выполнения выражений)
sizeof — возвращает размер переменной или типа в байтах
& — получение адреса переменной (указатель)
* — разыменование указателя
-> — доступ к члену класса/структуры через указатель
. — доступ к члену класса/структуры через объект
<< - Переопределение оператора. оператор << принимает два аргумента: ссылку на объект потока (левый операнд) и фактическое значение для вывода (правый операнд). Затем он возвращает новую ссылку на поток, которую можно передать при следующем вызове оператора << в цепочке.


Квадратные скобки [] — для работы с массивами (arr[5]) или в объявлениях (int arr[10]).
Угловые скобки <> — для включения заголовочных файлов (#include <iostream>) или шаблонов (std::vector<int>).

Двоеточие : — используется в:
Метках (label) для goto
Операторе switch-case
Конструкторах классов для инициализации

Кавычки "" и '':
"" — для строковых литералов (std::string s = "hello")
'' — для символьных литералов (char c = 'A')

Символы для работы с указателями и ссылками

* — объявление указателя (int* ptr) или разыменование
& — получение адреса или объявление ссылки (int& ref)
&& — rvalue-ссылка (C++11 и выше)

Некоторые обозначения появились или стали популярны в новых стандартах C++:
-> — в лямбда-выражениях для указания возвращаемого типа ([]() -> int { return 1; })
decltype — получение типа выражения
nullptr — указатель, обозначающий отсутствие значения
[[...]] — атрибуты (например, [[nodiscard]])
=> — не используется в C++, но иногда путают с синтаксисом других языков

Контекст: Некоторые символы (например, & или *) имеют разное значение в зависимости от контекста (указатель, ссылка, оператор и т. д.).